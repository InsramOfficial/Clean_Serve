@using Fastfood.ViewModel;
@model CategoryItemVM;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Cart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.20.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="~/css/salesformstyle.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>

        .discount-cell input {
            border: 0;
            background: transparent;
            padding: 0;
            outline: none;
            box-shadow: none;
            border-radius: 0;
            /* Add any other styling as needed */
            color: inherit;
            font: inherit;
            width: 15px;
            /* Add any other styles as needed */
        }

        .normal-text {
            border: 0;
            background: transparent;
            padding: 0;
            outline: none;
            box-shadow: none;
            border-radius: 0;
            /* Add any other styling as needed */
            color: inherit;
            font: inherit;
            width: 30px;
        }

        .price-cell input {
            border: 0;
            background: transparent;
            padding: 0;
            outline: none;
            box-shadow: none;
            border-radius: 0;
            /* Add any other styling as needed */
            color: inherit;
            font: inherit;
            width: 30px;
            /* Add any other styles as needed */
        }

        .item-name-cell input {
            border: 0;
            background: transparent;
            padding: 0;
            outline: none;
            box-shadow: none;
            border-radius: 0;
            /* Add any other styling as needed */
            color: inherit;
            font: inherit;
            width: 100px;
            /* Add any other styles as needed */
        }


        .quantity-buttons-container {
            display: flex;
            width: -20px;
            font-size: 10px;
        }

            .quantity-buttons-container .increment-button {
                font-size: 20px;
                background-color: #50C878; /* Change the color for the increment button */
            }

            .quantity-buttons-container .decrement-button {
                font-size: 20px;
                background-color: #FFA500; /* Change the color for the decrement button */
            }

            .quantity-buttons-container button {
                color: #fff;
                border: none;
                padding: 0px 13px;
                cursor: pointer;
                border-radius: 3px;
                transition: background-color 0.3s ease;
            }


        .table-container {
            position: relative;
        }

        #Mycarttable thead tr {
            position: sticky;
            top: 0;
            background: #ADDBEE;
            z-index: 1;
        }

        .quantity-button1 {
            color: green;
        }

        .quantity {
            width: 15px;
        }

        .custom-close-btn {
            border-radius: 3px;
        }
        /* //css for the dropdown */
        /* #customerList {
            position: absolute;
            width: 100%;
            z-index: 1000;
            color: black;
            background: white;
            list-style: none;
        }

            #customerList li {
                padding: 8px;
                cursor: pointer;
            }

                #customerList li:hover {
                    background-color: #f1f1f1;
                } */

        .outer-container {
            margin-top: -15px;
        }

        .net-total {
            border: 0;
            background: transparent;
            padding: 0;
            outline: none;
            box-shadow: none;
            border-radius: 0;
            /* Add any other styling as needed */
            color: inherit;
            font: inherit;
            width: 40px;
        }
        /* Previous CSS */

.text-danger {
    color: #dc3545;
}

#customer-list {
    list-style: none;
    padding: 0;
    position: absolute;
    width: 100%;
    z-index: 1000;
    color: black;
    background: white;
}

#customer-list li {
    padding: 8px;
    cursor: pointer;
    margin-bottom: 5px;
    border-radius: 5px;
    display: none;
    transition: background-color 0.3s;
}

#customer-list li:hover {
    background-color: #f1f1f1;
    border: 1px solid #ddd;
}

/* End of Previous CSS */




    </style>
</head>

<body>
    <div class="outer-container no-margin-top">
        <form id="customer-form" class="mt-2 mb-3" method="post" asp-action="DynamicalData" asp-controller="Sales">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-6 rounded-5">
                        <div class="breadcrumb mt-5" id="breadcrumb"></div>
                        <div class="outer-container">
                            <div class="container1 clickable-cell-container" id="container1">
                                <div class="content">
                                    <table class="table">
                                        <tr id="row1">
                                            @foreach (var item in Model.category)
                                            {
                                                <td class="clickable-cell tablecell button-like align-items-center" id="ItemName"
                                                    name="ItemName" asp-for="ItemName" data-category="@item.CategoryId"
                                                    data-category-name="@item.CategoryName">
                                                    @item.CategoryName
                                                </td>
                                            }
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div class="container1 clickable-cell-container" id="container2" style="display: none;">
                                <div class="content">
                                    <div style="max-height: 300px; overflow-y: auto;">
                                        <table class="table">
                                            <tbody id="filteredtable"></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="container1 clickable-cell-container" id="container3" style="display: none;">
                                <div class="content">
                                    <table class="table">
                                        <tbody id="filteredtablepizza">
                                            <tr>
                                                <td class="clickable-cell tablecell button-like align-items-center"
                                                    data-remarks="Regular">
                                                    Regular
                                                </td>
                                                <td class="clickable-cell tablecell button-like align-items-center"
                                                    data-remarks="Medium">
                                                    Medium
                                                </td>
                                                <td class="clickable-cell tablecell button-like align-items-center"
                                                    data-remarks="Large">
                                                    Large
                                                </td>
                                                <td class="clickable-cell tablecell button-like align-items-center"
                                                    data-remarks="Extra Topping">
                                                    Extra Topping
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mt-3">
                        <div class="row">
                            <div class="col-4">
                                <h2>Cart</h2>
                            </div>
                            <div class="col-8">
                                <div class="form-group row position-relative">
                                    <label class="col-3 col-form-label">Customer:</label>
                                    <div class="col-sm-9 position-relative">
                                        <!-- Adjusted width to col-sm-9 -->
                                        <div class="input-group">
                                            <!-- Adjust the column width as needed -->
                                            <input asp-for="Clientdetails.Name" type="text" id="searchInput" class="form-control" placeholder="Search Customer..." autocomplete="off">
                                            <div class="input-group-append">
                                                <button type="button" class="btn btn-primary" onclick="OpenCreateCustomerModal()">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                                <a asp-action="BillsHistory" asp-controller="Sales" class="btn btn-success">
                                                    <i class="fas fa-history"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <!-- <input asp-for="Clientdetails.Clientid" type="hidden" /> -->
                                        <ul id="customer-list" class="list-group">
                                            @foreach (var item in Model.clients)
                                            {
                                                <li class="customer-item">
                                                    @item.Name
                                                    <input id="clientId" value="@item.Clientid" type="hidden" />
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>

                        <div class="row">
                            <div class="col-md-5">
                                <h4>Payment Method</h4>
                                <div class="form-group">
                                        <div class="form-check form-check-inline">
                                            <input asp-for="PaymentMethod" class="form-check-input" type="radio" name="paymentMethod" id="cash" value="Cash" checked onclick="handleCashRadioClick()">
                                            <label class="form-check-label" asp-for="PaymentMethod">Cash</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input asp-for="PaymentMethod" class="form-check-input" type="radio" name="paymentMethod" onclick="handlePaymentMethodChange()" id="creditCardRadio" value="CreditCard">
                                            <label class="form-check-label" for="creditCard">Credit Card</label>
                                        </div>
                                </div>
                                <div class="modal fade" id="creditCardModal" tabindex="-1" role="dialog"
                                     aria-labelledby="creditCardModalLabel" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="creditCardModalLabel">Credit Card Payment</h5>
                                            <button type="button" class="close custom-close-btn" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true" id="closeModelButtonTop"><i class="bi bi-x"></i></span>
                                            </button>
                                        </div>
                                    <div class="modal-body">
                                        <table>
                                            <tr>
                                                <td>
                                                    <div class="form-group">
                                                        <label for="cardholderName">BIN Number</label>
                                                        <input asp-for="BankSattlement.BIN" type="text" class="form-control" id="CardBinNumber">
                                                        <button type="button" id="CardDetailCheck" class="btn btn-success mt-2">Check</button>
                                                    </div>
                                                </td>
                                                <td class="align-top">
                                                    <div class="form-group">
                                                        <label for="DiscountPayment">Pay After Discount</label>
                                                        <input type="text" class="form-control" id="FinalPayment">
                                                    </div>
                                                </td>
                                                <td class="align-top">
                                                    <div class="form-group">
                                                        <label for="cardNumber">Card Number</label>
                                                        <input asp-for="CardNumber" type="text" class="form-control" id="cardNumber">
                                                        <small id="cardNumberError" class="text-danger"></small>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr id="authIdContainerRow" style="display: none;">
                                                <td>
                                                    <div class="form-group">
                                                        <label for="authId">Auth ID</label>
                                                        <input  type="text" class="form-control" id="authId" readonly>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="form-group">
                                                        <label for="expiryDate">Bank Name</label>
                                                        <input asp-for="BankSattlement.BankName" type="text" class="form-control" id="BankName" readonly>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="form-group">
                                                        <label for="cvvNumber">Card Type</label>
                                                        <input asp-for="BankSattlement.CardType" type="text" class="form-control" id="CardType" readonly>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class="form-group">
                                                        <label for="expiryDate">Card Category</label>
                                                        <input asp-for="BankSattlement.Card_Cat" type="text" class="form-control" id="CardCat" readonly>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="form-group">
                                                        <label for="cvvNumber">Discount</label>
                                                        <input asp-for="BankSattlement.DiscountPercent" type="text" class="form-control" id="Discount" readonly>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" id="closeModalButton">
                                                Close
                                            </button>
                                            <button type="button" id="ApplyCardPayment" class="btn btn-primary">Apply</button>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <h4>Delivery Method</h4>
                                <div class="form-group">
                                    <div class="form-check form-check-inline">
                                        <input asp-for="DeliveryMethod" class="form-check-input" type="radio" name="deliveryMethod" id="dineIn"
                                               value="DineIn" checked>
                                        <label class="form-check-label" for="dineIn">Dine In</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input asp-for="DeliveryMethod" class="form-check-input" type="radio" name="deliveryMethod" id="packing"
                                               value="Packing">
                                        <label class="form-check-label" for="packing">Packing</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input asp-for="DeliveryMethod" class="form-check-input" type="radio" name="deliveryMethod" id="delivery"
                                               value="Delivery">
                                        <label class="form-check-label" for="delivery">Delivery</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="table-container" style="max-height: 155px; overflow-y: auto; ">
                            <table id="Mycarttable" class="table" style="width: 100%; font-size: 11.5px;">
                                <thead>
                                    <tr>
                                        <th>Item Name</th>
                                        <th>Unit Price</th>
                                        <th>Quantity</th>
                                        <th>Discount</th>
                                        <th>Net Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <div>
                            <div class="mt-5 mb-0">
                                <table class="table">
                                    <tr>
                                        <td>
                                            <input asp-for="GrossTotal" id="grosstotal" class="form-control" type="text" placeholder="GrossTotal" readonly>
                                        </td>
                                        <td>
                                            <input asp-for="BilDiscount" id="billDiscountTotal" class="form-control" type="text" placeholder="BillDiscount">
                                        </td>
                                        <td>
                                            <input asp-for="FinalBillTotal" id="Finaltotal" class="form-control" type="text" placeholder="Total" readonly>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div style="margin-top:-20px">

                                <table class="table">
                                    <tr>
                                        <td>
                                            <input asp-for="CashReceived" id="cashreceived" class="form-control" type="text" placeholder="Cash Received">
                                        </td>
                                        <td>
                                            <input asp-for="CashPayBack" id="payback" class="form-control" type="text" placeholder="Pay Back" readonly>
                                        </td>
                                       <td id="authIdContainer" style="display: none;">
                                        <input  id="payback" class="form-control" type="text" placeholder="Auth" readonly>
                                            </td>
                                        <td>
                                            <button type="submit" class="btn btn-primary float-end">Save</button>
                                        </td>

                                    </tr>
                                </table>
                            </div>

                        </div>


                    </div>
                </div>
            </div>
        </form>
    </div>
    
    <form method="post" asp-action="CreateCustomer" asp-controller="Sales">
        <div class="modal fade" id="CreateCustomerModel" tabindex="-1" role="dialog"
             aria-labelledby="creditCardModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Create Customer</h5>
                        <button type="button" class="close custom-close-btn" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true" id="closeModelTopButton"><i class="bi bi-x"></i></span>
                        </button>

                    </div>
                    <div class="modal-body">
                        <table>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label>Name</label>
                                        <input name="CustomerName" type="text" class="form-control">
                                    </div>
                                </td>
                                <td class="align-top">
                                    <div class="form-group">
                                        <label>Email</label>
                                        <input type="text" class="form-control" id="cardNumber">
                                        <small class="text-danger"></small>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label>Phone Number</label>
                                        <input type="text" class="form-control">
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group">
                                        <label>Address</label>
                                        <input type="text" class="form-control">
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label>CNIC</label>
                                        <input type="text" class="form-control">
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group">
                                        <label>Alternate Phone</label>
                                        <input type="text" class="form-control">
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" id="closeModalButtonBottom">
                            Close
                        </button>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
      
        $(document).ready(function () {
            $('.clickable-cell').on('click', function () {
                const categoryId = $(this).data('category');
                const categoryName = $(this).data('category-name');

                if ($('#container1').is(':visible')) {
                    $('#container1').hide();
                    breadcrumbText = '<a href="#" class="breadcrumb-link" data-category="Category">Category</a>  ';
                    breadcrumbText += '<span class="breadcrumb-text active-category">' + categoryName + '</span>  ';
                    $('#breadcrumb').html(breadcrumbText);
                } else {
                    $('#container2').hide();
                    $('#breadcrumb').html('<a href="#" class="breadcrumb-link active-category" data-category="Category">Category</a>  ');
                }
            });

            $('#breadcrumb').on('click', '.breadcrumb-link', function () {
                const category = $(this).data('category');

                if (category === 'Category') {
                    $('#container2').hide();
                    $('#container1').show();
                    $('#breadcrumb').html('<a href="#" class="breadcrumb-link" data-category="Category">Category</a> ');
                } else {
                    breadcrumbText = breadcrumbText.substring(0, breadcrumbText.indexOf(category) + category.length + 2);
                    $('#breadcrumb').html(breadcrumbText);
                    $('#container2').hide();
                    $('#container1').show();
                }
            });

            $('.clickable-cell').on('click', function () {
                const categoryId = $(this).data('category');

                function copyContainer3ToContainer2() {
                    $('#container2 .content').empty();
                    const data = $('#container3 .content').html();
                    $('#container2 .content').html(data);

                    $('#container2 .content .clickable-cell[data-remarks]').on('click', function () {
                        const remarks = $(this).data('remarks');
                    });
                }

                function initializeContainers() {
                    $('#container1').hide();
                    $('#container2').hide();
                    $('#container3').show();

                    $('#category2-button').on('click', function () {
                        copyContainer3ToContainer2();
                    });
                }

                $(document).ready(function () {
                    initializeContainers();
                });

                if (categoryId == 2) {
                    $('#filteredtable').empty();
                    $('#container1').hide();
                    $('#container2').hide();
                    $('#container3').show();

                    $('.clickable-cell[data-remarks]').on('click', function () {
                        const remarks = $(this).data('remarks');
                        $.ajax({
                            url: '/Sales/FilterItemsByRemarks',
                            method: 'GET',
                            data: { remarks: remarks },
                            success: function (data) {
                                $('#filteredtable').empty();
                                let row = $('<tr>');

                                data.forEach(function (item, index) {
                                    const cell = `<td class="clickable-cell tablecell button-like align-items-center" data-item="${item.itemId}">${item.itemName}</td>`;
                                    row.append(cell);

                                    if ((index + 1) % 4 === 0) {
                                        $('#filteredtable').append(row);
                                        row = $('<tr>');
                                    }
                                });

                                if (row.find('td').length > 0) {
                                    $('#filteredtable').append(row);
                                }
                            }
                        });
                    });
                } else {
                    $.ajax({
                        url: '/Sales/FilterItems',
                        method: 'GET',
                        data: { categoryId: categoryId },
                        success: function (data) {
                            $('#filteredtable').empty();
                            let row = $('<tr>');

                            data.forEach(function (item, index) {
                                const cell = `<td class="clickable-cell tablecell button-like align-items-center" data-item="${item.itemId}">${item.itemName}</td>`;
                                row.append(cell);

                                if ((index + 1) % 4 === 0) {
                                    $('#filteredtable').append(row);
                                    row = $('<tr>');
                                }
                            });

                            if (row.find('td').length > 0) {
                                $('#filteredtable').append(row);
                            }

                            $('#container1').hide();
                            $('#container3').hide();
                            $('#container2').show();
                        },
                    });
                }
            });

            $('#container1').on('click', '.clickable-cell', function () {
                const categoryId = $(this).data('category');
                const categoryName = $(this).data('category-name');

                $('#container1').hide();
                $('#container2').show();

                const breadcrumbText = '<a href="#" class="breadcrumb-link" data-category="Category">Category</a>  ' +
                    '<a href="#" class="breadcrumb-link" data-category="' + categoryId + '">' + categoryName + '</a>';

                $('#breadcrumb').html(breadcrumbText);
            });


            $('#container2').on('click', '.clickable-cell', function () {
                const itemId = $(this).data('item');
                console.log("Item is Clicked" + itemId);
                $.ajax({
                    url: '/Sales/FilterItemsByItemId',
                    method: 'GET',
                    data: { itemId: itemId },
                    success: function (data) {
                        data.forEach(function (item) {
                            console.log(item.itemName);
                            var itemName = item.itemName;
                            var unitPrice = item.recentUnitPrice;
                            var quantity = 1;
                            var discount = 20;
                            var itemId = item.itemId;
                            // Find the last row in the dynamicDataTable and fill it with the selected data
                            var lastRow = $('#Mycarttable tbody tr:last');
                            var index = lastRow.index() + 1; // Increment the index for the new row
                            var newRow = $('<tr></tr>');

                            // Adding a cell with a default value of "ExampleItem"
                            addCell(newRow, "ItemName", "text", index, itemName, "item-name-cell");

                            addCell(newRow, "Price", "text", index, unitPrice, "price-cell");

                            addQuantityCell(newRow, "Quantity", index, quantity);
                            addCell(newRow, "Discount", "text", index, discount, "discount-cell");

                            // Adding a Net Total cell with default value 0.00
                            addNetTotalCell(newRow, index, unitPrice, quantity, discount);

                            addRemoveCell(newRow, index);

                            addCell(newRow, "ItemId", "hidden", index, itemId);
                            $('#Mycarttable tbody').append(newRow);
                            updateGrossTotal();
                            updatePayback();
                        });
                        $('#container1').hide();
                        $('#container2').show();
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });

            function updateFinalTotal() {
                var grosstotal = parseFloat($('#grosstotal').val()) || 0;
                var billDiscountTotal = parseFloat($('#billDiscountTotal').val()) || 0;

                var finaltotal = grosstotal - billDiscountTotal;

                // Update the Final Total input field
                $('#Finaltotal').val(finaltotal.toFixed(2));
            }
            function updatePayback() {
                var cashReceived = parseFloat($('#cashreceived').val()) || 0;
                var finalTotal = parseFloat($('#Finaltotal').val()) || 0;

                var payback = cashReceived - finalTotal;
                // Update the Payback input field
                $('#payback').val(payback.toFixed(2));
            }

            // Example: Call this function when you update the CashReceived input field
            $('#cashreceived').on('input', function () {
                // Update the Payback after changing the CashReceived
                updatePayback();
            });
            function addCell(row, propertyName, type, index, defaultValue, cellClass) {
                var cell = $('<td></td>').addClass(cellClass); // Add the specified class to the cell

                var input = $('<input>');
                input.attr({
                    type: type,
                    name: "DynamicData[" + index + "]." + propertyName,
                    value: defaultValue
                });

                // Make the input readonly
                input.prop('readonly', true);

                cell.append(input);
                row.append(cell);
            }


            // Function to add Net Total cell
            function addNetTotalCell(row, index, unitPrice, quantity, discount) {
                var cell = $('<td></td>');

                var netTotal = (unitPrice * quantity) - discount;

                var input = $('<input>').addClass(' net-total');
                input.attr({
                    type: "text",
                    name: "DynamicData[" + index + "].NetTotal",
                    value: netTotal.toFixed(2)
                });

                // Make the input readonly
                input.prop('readonly', true);

                cell.append(input);
                row.append(cell);
            }

            // Function to update Gross Total by summing all Net Totals
            function updateGrossTotal() {
                var grossTotal = 0;

                // Iterate through all rows in the table
                $('#Mycarttable tbody tr').each(function () {
                    var netTotal = parseFloat($(this).find('td:eq(4) input').val()) || 0;
                    grossTotal += netTotal;
                });

                // Update the Gross Total input field
                $('#grosstotal').val(grossTotal.toFixed(2));
                updateFinalTotal();
                updatePayback();
            }
            $('#billDiscountTotal').on('input', function () {
                // Update the Final Total after changing the billDiscountTotal
                updateFinalTotal();
            });
            // Function to update Total Price based on unit price and quantity
            // Function to update Total Price based on unit price and quantity
            function updateTotalPrice(row) {
                var unitPrice = parseFloat(row.find('td:eq(1) input').val());
                var quantity = parseInt(row.find('td:eq(2) input').val(), 10);
                var discount = parseFloat(row.find('td:eq(3) input').val()); // Add this line to get the discount

                var totalPrice = unitPrice * quantity;
                var netTotal = totalPrice - (discount * quantity); // Calculate the net total

                // Update the correct input fields for Total Price and Net Total
                row.find('td:eq(4) input').val(netTotal.toFixed(2));
                // row.find('td:eq(5) input').val(totalPrice.toFixed(2));

                updateGrossTotal();
            }
            function addQuantityCell(row, propertyName, index, defaultValue) {
                var cell = $('<td></td>');

                var input = $('<input>').addClass('normal-text quantity').css({
                    'font-size': '12px', // Set font size here
                    'margin': '0 2px' // Add some right margin
                });

                input.attr({
                    type: "text",
                    name: "DynamicData[" + index + "]." + propertyName,
                    value: defaultValue || "1"
                });
                input.prop('readonly', true);
                var incrementButton = $('<button></button>').text("+").attr("type", "button").addClass('quantity-button increment-button').css('font-size', '16px'); // Set font size here
                incrementButton.on("click", function () {
                    var currentValue = parseInt(input.val(), 10);
                    input.val(currentValue + 1);

                    // Update the total price and net total when the quantity changes
                    updateTotalPrice(row);
                });

                var decrementButton = $('<button></button>').text("-").attr("type", "button").addClass('quantity-button decrement-button').css('font-size', '16px'); // Set font size here
                decrementButton.on("click", function () {
                    var currentValue = parseInt(input.val(), 10);
                    if (currentValue > 0) {
                        input.val(currentValue - 1);

                        // Update the total price and net total when the quantity changes
                        updateTotalPrice(row);
                    }
                });

                // Wrap buttons and quantity display in a div for horizontal alignment
                var buttonsContainer = $('<div></div>').addClass('quantity-buttons-container');
                buttonsContainer.append(decrementButton, input, incrementButton);

                // Clear the existing content in the cell and append the new content
                cell.empty().append(buttonsContainer);

                // Append the cell to the row
                row.append(cell);
                updateGrossTotal();
            }



            function addRemoveCell(row, index) {
                var cell = $('<td></td>');

                var removeButton = $('<button></button>').addClass('btn btn-danger btn-sm').attr({
                    type: "button",
                    "data-index": index
                }).on("click", function () {
                    removeRow(row, index);
                });

                // Add Bootstrap trash icon to the button
                var icon = $('<i></i>').addClass('bi bi-trash');
                removeButton.append(icon);

                cell.append(removeButton);

                row.append(cell);
            }


            function removeRow(row, index) {
                row.remove();
                updateGrossTotal();
                // You may need to adjust the index of other rows based on your logic
            }
        });
        var creditCardRadio = document.getElementById('creditCardRadio');
        var authIdContainer = document.getElementById('authIdContainer');

        // Function to handle the radio button click event
        function handlePaymentMethodChange() {
            // Check if the credit card radio button is checked
            if (creditCardRadio.checked) {
                // Show the Auth ID box
                authIdContainer.style.display = 'table-cell';
            } else {
                // Hide the Auth ID box if another payment method is selected
                authIdContainer.style.display = 'none';
            }
            openCreditCardModal();
        }

        // Function to show the credit card modal
        function openCreditCardModal() {
            $('#creditCardModal').modal('show');
        }

        // Event listener for the Close button in the modal
        $('#closeModalButton, #closeModelButtonTop').click(function () {
            // Close the modal
            $('#creditCardModal').modal('hide');
        });
        // For Customer Create
        function OpenCreateCustomerModal() {
            $('#CreateCustomerModel').modal('show');
        }
        $('#closeModelTopButton').click(function () {
            // Close the modal
            $('#CreateCustomerModel').modal('hide');
        });
        $('#closeModalButtonBottom').click(function () {
            // Close the modal
            $('#CreateCustomerModel').modal('hide');
        });

        // Handle clicking on a customer in the list
        $(document).on("click", "#CardDetailCheck", function () {
            var Bin = document.getElementById('CardBinNumber').value;
            console.log(Bin);
            console.log("Check button Clicked");
            $.ajax({
                url: '/Sales/BankDetail',
                method: 'GET',
                data: { Bin: Bin },
                success: function (data) {
                    console.log(data);
                    console.log(data.bankName);
                    $('#BankName').val(data.bankName);
                    $('#CardType').val(data.cardType);
                    $('#CardCat').val(data.card_Cat);
                    $('#Discount').val(data.discountPercent);
                    console.log(data.discountPercent);

                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });

        });

        $(document).on("click", "#ApplyCardPayment", function () {
            console.log("You have clicked apply button");

            // Get the card number value
            var cardNumber = $('#cardNumber').val();

            // Get the error message element
            var cardNumberError = $('#cardNumberError');

            // Check if the card number is empty
            if (!cardNumber) {
                // Display the error message
                cardNumberError.text("Card number is required.");
                return; // Stop further execution
            }

            // Clear the error message if the card number is not empty
            cardNumberError.text("");

            // Continue with the rest of your code if the card number is not empty
            var finalTotal = parseFloat($('#Finaltotal').val()) || 0;
            var discountPercent = document.getElementById('Discount').value;
            var discountedTotal = finalTotal - (finalTotal * (discountPercent / 100));

            console.log(discountedTotal);
            $('#Finaltotal').val(discountedTotal.toFixed(2));
            $('#creditCardModal').modal('hide');
        });

        $(document).ready(function () {
            var customerList = $('.customer-item');
            var resultContainer = $('#resultContainer');
            var dropdown = $('#customer-list');

            // Hide dropdown when clicking outside
            $(document).on('click', function (e) {
                if (!dropdown.is(e.target) && dropdown.has(e.target).length === 0) {
                    customerList.hide();
                    resultContainer.empty();
                }
            });

            $('#searchInput').on('input', function () {
                var searchTerm = $(this).val().toLowerCase();

                customerList.each(function () {
                    var customerName = $(this).text().toLowerCase();
                    if (customerName.includes(searchTerm)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                // Display a message when no matching records are found
                if ($('#customer-list .customer-item:visible').length === 0) {
                    resultContainer.html('<p class="text-danger">No matching records found.</p>');
                } else {
                    resultContainer.empty();
                }
            });

            $('#customer-list').on('click', '.customer-item', function () {
                var itemName = $(this).text().trim(); // Use trim() to remove whitespace
                var clientId = $('#clientId').val();
                console.log("This is before clientID");
                console.log(clientId);
                $('#searchInput').val(itemName); // Display the name in the input field

                customerList.hide(); // Hide all items after clicking
                resultContainer.empty();
            });
        });



    </script>


</body>
</html>